/*
 * This file is generated by jOOQ.
 */
package com.nullXer0.dbee;


import com.nullXer0.dbee.tables.DiscordRoles;
import com.nullXer0.dbee.tables.TeamMembers;
import com.nullXer0.dbee.tables.TeamRoles;
import com.nullXer0.dbee.tables.Teams;
import com.nullXer0.dbee.tables.records.DiscordRolesRecord;
import com.nullXer0.dbee.tables.records.TeamMembersRecord;
import com.nullXer0.dbee.tables.records.TeamRolesRecord;
import com.nullXer0.dbee.tables.records.TeamsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.QOM.ForeignKeyRule;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DiscordRolesRecord> DISCORD_ROLES_PKEY = Internal.createUniqueKey(DiscordRoles.DISCORD_ROLES, DSL.name("discord_roles_pkey"), new TableField[] { DiscordRoles.DISCORD_ROLES.ID }, true);
    public static final UniqueKey<DiscordRolesRecord> DISCORD_ROLES_TEAM_ID_ROLE_ID_KEY = Internal.createUniqueKey(DiscordRoles.DISCORD_ROLES, DSL.name("discord_roles_team_id_role_id_key"), new TableField[] { DiscordRoles.DISCORD_ROLES.TEAM_ID, DiscordRoles.DISCORD_ROLES.ROLE_ID }, true);
    public static final UniqueKey<TeamRolesRecord> TEAM_ROLES_PK = Internal.createUniqueKey(TeamRoles.TEAM_ROLES, DSL.name("team_roles_pk"), new TableField[] { TeamRoles.TEAM_ROLES.ROLE_ID }, true);
    public static final UniqueKey<TeamsRecord> TEAMS_PK = Internal.createUniqueKey(Teams.TEAMS, DSL.name("teams_pk"), new TableField[] { Teams.TEAMS.TEAM_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DiscordRolesRecord, TeamRolesRecord> DISCORD_ROLES__DISCORD_ROLES_ROLE_ID_FKEY = Internal.createForeignKey(DiscordRoles.DISCORD_ROLES, DSL.name("discord_roles_role_id_fkey"), new TableField[] { DiscordRoles.DISCORD_ROLES.ROLE_ID }, Keys.TEAM_ROLES_PK, new TableField[] { TeamRoles.TEAM_ROLES.ROLE_ID }, true, ForeignKeyRule.NO_ACTION, ForeignKeyRule.NO_ACTION);
    public static final ForeignKey<DiscordRolesRecord, TeamsRecord> DISCORD_ROLES__DISCORD_ROLES_TEAM_ID_FKEY = Internal.createForeignKey(DiscordRoles.DISCORD_ROLES, DSL.name("discord_roles_team_id_fkey"), new TableField[] { DiscordRoles.DISCORD_ROLES.TEAM_ID }, Keys.TEAMS_PK, new TableField[] { Teams.TEAMS.TEAM_ID }, true, ForeignKeyRule.NO_ACTION, ForeignKeyRule.NO_ACTION);
    public static final ForeignKey<TeamMembersRecord, TeamsRecord> TEAM_MEMBERS__TEAM_MEMBERS_TEAM_ID_FKEY = Internal.createForeignKey(TeamMembers.TEAM_MEMBERS, DSL.name("team_members_team_id_fkey"), new TableField[] { TeamMembers.TEAM_MEMBERS.TEAM_ID }, Keys.TEAMS_PK, new TableField[] { Teams.TEAMS.TEAM_ID }, true, ForeignKeyRule.NO_ACTION, ForeignKeyRule.NO_ACTION);
}
