/*
 * This file is generated by jOOQ.
 */
package com.nullXer0.dbee.tables.records;


import com.nullXer0.dbee.tables.DiscordRoles;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DiscordRolesRecord extends UpdatableRecordImpl<DiscordRolesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.discord_roles.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.discord_roles.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.discord_roles.team_id</code>.
     */
    public void setTeamId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.discord_roles.team_id</code>.
     */
    public Integer getTeamId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.discord_roles.role_id</code>.
     */
    public void setRoleId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.discord_roles.role_id</code>.
     */
    public Integer getRoleId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.discord_roles.snowflake</code>.
     */
    public void setSnowflake(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.discord_roles.snowflake</code>.
     */
    public Long getSnowflake() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DiscordRolesRecord
     */
    public DiscordRolesRecord() {
        super(DiscordRoles.DISCORD_ROLES);
    }

    /**
     * Create a detached, initialised DiscordRolesRecord
     */
    public DiscordRolesRecord(Integer id, Integer teamId, Integer roleId, Long snowflake) {
        super(DiscordRoles.DISCORD_ROLES);

        setId(id);
        setTeamId(teamId);
        setRoleId(roleId);
        setSnowflake(snowflake);
        resetTouchedOnNotNull();
    }
}
